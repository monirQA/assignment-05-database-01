1. CREATE a DATABASE named class_one_assignment
-----------------------------------------------
solve: CREATE DATABASE class_one_assignment;

DATA USE:
---------
USE class_one_assignment;

2. CREATE a TABLE named customers
---------------------------------
solve:
------
CREATE TABLE customers(
  id INT AUTO_INCREMENT,
  First_Name VARCHAR (20) NOT NULL,
  last_name VARCHAR (20) NOT NULL,
  Date_of_Birth DATE NOT NULL,
  Phone VARCHAR (13) NOT NULL,
  Address VARCHAR (255) NOT NULL,
  City VARCHAR (10) NOT NULL,
  State VARCHAR (10) NOT NULL,
  Points INT NOT NULL,
  PRIMARY KEY (id)
  );
  
  
  3. INSERT TABLE
  -------------------------------
  solve:
  ------
  INSERT INTO customers (First_Name,last_name,Date_of_Birth,Phone,Address,City,State,Points) VALUES
  ('Babara','MacCaffrey','1986-03-28','781-932-9754','0 Sage Terrace','Waltham', 'MA','2273'),
  ('Ines','Brushfield','1986-04-13','804-427-9456','14187 Commercial Trail','Hampton', 'VA','947'),
  ('Freddi','Boagey','1985-02-07','719-724-7869','251 Springs Junction','Colorado Springs', 'CO','2967'),
  ('Ambur','Roseburgh','1974-04-14','407-231-8017','30 Arapahoe Terrace','Orlando', 'FL','457'),
  ('Ines','Betchley','1973-11-07','NULL','5 Spohn Circle','Arlington', 'TX','3675');
  
  
  4. SHOW only 2 members whose points are more THAN 1000
  ------------------------------------------------------
  
  solve: SELECT * FROM customers WHERE points > 1000 LIMIT 2;
  
  5. Find the customers whose age IS IN 1980 TO 1990 OR points LESS THAN 1000
  ---------------------------------------------------------------------------
  
  SELECT * FROM customers WHERE Date_of_Birth BETWEEN '1980-01-01' AND '1990-12-31' OR Points < 1000;
  
  6. ORDER the customers BY points IN ascending AND descending ORDER
  ---------------------------------------------------------------------------
  
  Ascending ORDER:
  ----------------
  solve: SELECT * FROM customers ORDER BY points ASC;
  
  Descending ORDER
  ------------------
  solve: SELECT * FROM customers ORDER BY points DESC;
  
  7. Find the customer whose NAME CONTAINS 'burgh' USING LIKE AND REGEXP
  -----------------------------------------------------------------------
  LIKE Search
  ----------
  solve: SELECT * FROM customers WHERE LOWER (CONCAT (First_Name, ' ', last_name)) LIKE '%burgh';
  
  USING REGEXP
  --------------
  solve: SELECT * FROM customers WHERE LOWER (CONCAT (First_Name, ' ', last_name)) REGEXP '%Boa%';
  

  
  8. Find the customer who does NOT have phone number
  -------------------------------------------------
 
  solve: SELECT * FROM customers WHERE Phone = 'NULL';
  
  9. CHANGE the 'Date of Birth' COLUMN NAME INTO 'dob'
  -------------------------------------------------
  solve: ALTER TABLE customers CHANGE Date_of_Birth dob DATE;
  
  
  10. Find the MAX POINT holder customer
  ----------------------------------
  solve: SELECT * FROM customers WHERE points = (SELECT MAX(points) FROM Customers);
  
  
11. EXECUTE a QUERY FOR the following scenario.
IF customers have points LESS THAN 1000, they are bronze member.
IF customers have points more THAN 1000 AND LESS THAN 2000, they are silver member.
IF customers have points more THAN 2000 AND LESS THAN 3000, they are  member.
IF customers have points more THAN 3000, they are platinum member
------------------------------------------------------------------------
solve:
-------
SELECT *, CASE 

WHEN points < 1000
THEN 'bronze member'

WHEN points > 1000 AND 
points < 2000
THEN 'Silver member'

WHEN points > 2000 AND 
points < 3000
THEN 'Gold member'

WHEN points > 3000 
THEN 'Platinum Number'

END AS Rewards

FROM customers;

Customers ALL info:
-------------------------
SELECT * FROM customers;